@model Exam.Models.AssignQuestionViewModel

@{
    ViewData["Title"] = "Add Questions to Exam";
}

<h2>Add Questions to Exam</h2>

<form asp-action="AssignQuestion" method="post">
    <input type="hidden" name="ExamId" value="@Model.ExamId" />
    <input type="hidden" name="ExamType" value="@Model.ExamType" />

    <div class="form-group">
        <label asp-for="@Model.CreateQuestionViewModel.Body" class="control-label"></label>
        <input asp-for="@Model.CreateQuestionViewModel.Body" class="form-control" />
        <span asp-validation-for="@Model.CreateQuestionViewModel.Body" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.CreateQuestionViewModel.Mark" class="control-label"></label>
        <input asp-for="@Model.CreateQuestionViewModel.Mark" class="form-control" type="number"/>
        <span asp-validation-for="@Model.CreateQuestionViewModel.Mark" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label asp-for="QuestionType" class="control-label"></label>
        <select asp-for="QuestionType" class="form-control">
            <option value="">Select Question Type</option>
            <option value="MCQQuestion">MCQ Question</option>
            <option value="TrueOrFalseQuestion">True or False Question</option>
        </select>
        <span asp-validation-for="QuestionType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Add Question" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
